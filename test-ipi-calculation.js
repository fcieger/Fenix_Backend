// Teste do c√°lculo de IPI sem ipiAplicarProduto
function testIPICalculation() {
  console.log('üß™ TESTE - C√ÅLCULO DE IPI SEM ipiAplicarProduto');
  console.log('='.repeat(60));

  try {
    // Dados de teste
    const testData = {
      companyId: 'test-company-id',
      naturezaOperacaoId: 'test-natureza-id',
      ufOrigem: 'SP',
      ufDestino: 'RJ',
      itens: [
        {
          nome: 'Produto Teste IPI',
          quantidade: 1,
          valorUnitario: 100,
          valorDesconto: 0,
          ipiCST: '50' // CST tributado
        }
      ]
    };

    console.log('üìã Dados de teste:');
    console.log('- CST IPI: 50 (tributado)');
    console.log('- Valor: R$ 100,00');
    console.log('- Quantidade: 1');
    console.log('');

    // Simular resposta do backend (j√° que n√£o temos token de autentica√ß√£o)
    console.log('üîç Simulando c√°lculo de IPI...');
    
    // Simular a l√≥gica de c√°lculo baseada apenas no CST
    const cstsTributados = ['00', '01', '02', '03', '50', '51', '52', '99'];
    const cstsNaoTributados = ['04', '05', '49', '53', '54', '55'];
    
    const cstIPI = '50';
    const aliquotaIPI = 10; // 10%
    
    console.log(`üîç CST: ${cstIPI}, Al√≠quota: ${aliquotaIPI}%`);
    
    // Verificar se CST permite c√°lculo de IPI
    if (!cstsTributados.includes(cstIPI) || cstsNaoTributados.includes(cstIPI)) {
      console.log(`‚ùå CST ${cstIPI} n√£o tributado`);
      return;
    }
    
    // Verificar se al√≠quota √© v√°lida
    if (aliquotaIPI <= 0) {
      console.log('‚ùå Al√≠quota inv√°lida');
      return;
    }
    
    // Calcular IPI
    const valorTotal = (testData.itens[0].quantidade * testData.itens[0].valorUnitario) - testData.itens[0].valorDesconto;
    const baseIPI = valorTotal;
    const valorIPI = baseIPI * (aliquotaIPI / 100);
    
    console.log('‚úÖ RESULTADO:');
    console.log(`- Base IPI: R$ ${baseIPI.toFixed(2)}`);
    console.log(`- Al√≠quota: ${aliquotaIPI}%`);
    console.log(`- Valor IPI: R$ ${valorIPI.toFixed(2)}`);
    console.log(`- CST: ${cstIPI}`);
    console.log('');
    
    // Testar CST isento
    console.log('üîç Testando CST isento (04)...');
    const cstIsento = '04';
    
    if (!cstsTributados.includes(cstIsento) || cstsNaoTributados.includes(cstIsento)) {
      console.log(`‚úÖ CST ${cstIsento} n√£o tributado (correto)`);
    } else {
      console.log(`‚ùå CST ${cstIsento} deveria ser isento`);
    }
    
    console.log('');
    console.log('‚úÖ TESTE CONCLU√çDO COM SUCESSO!');
    console.log('‚úÖ IPI calculado baseado apenas no CST e al√≠quota');
    console.log('‚úÖ N√£o h√° mais depend√™ncia do campo ipiAplicarProduto');
    
  } catch (error) {
    console.error('‚ùå Erro no teste:', error.message);
  }
}

testIPICalculation();
