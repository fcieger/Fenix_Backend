const fetch = require('node-fetch');

const BASE_URL = 'http://localhost:3001';
const JAVA_SERVICE_URL = 'http://localhost:3002';

async function testIntegration() {
  console.log('üß™ Testando integra√ß√£o completa...\n');

  // 1. Testar se o backend NestJS est√° rodando
  console.log('1Ô∏è‚É£ Testando backend NestJS...');
  try {
    const response = await fetch(`${BASE_URL}/api/certificado/test`);
    const data = await response.json();
    console.log('‚úÖ Backend NestJS:', data.message);
  } catch (error) {
    console.log('‚ùå Backend NestJS n√£o est√° rodando:', error.message);
    return;
  }

  // 2. Testar se o servi√ßo Java est√° rodando
  console.log('\n2Ô∏è‚É£ Testando servi√ßo Java...');
  try {
    const response = await fetch(`${JAVA_SERVICE_URL}/api/java-certificado/test`);
    const data = await response.text();
    console.log('‚úÖ Servi√ßo Java:', data);
  } catch (error) {
    console.log('‚ùå Servi√ßo Java n√£o est√° rodando:', error.message);
    console.log('   Execute: cd /home/fabio/projetos/fenix-certificado-service && ./start-auto.sh');
    return;
  }

  // 3. Testar integra√ß√£o NestJS -> Java
  console.log('\n3Ô∏è‚É£ Testando integra√ß√£o NestJS -> Java...');
  try {
    const response = await fetch(`${BASE_URL}/api/certificado/test-java`);
    const data = await response.json();
    console.log('‚úÖ Integra√ß√£o:', data.message);
    console.log('   Java Service Available:', data.javaServiceAvailable);
  } catch (error) {
    console.log('‚ùå Erro na integra√ß√£o:', error.message);
  }

  // 4. Testar valida√ß√£o de certificado (simulado)
  console.log('\n4Ô∏è‚É£ Testando valida√ß√£o de certificado...');
  try {
    // Criar um arquivo de teste simulado
    const testFile = Buffer.from('test-certificate-data');
    const formData = new FormData();
    const blob = new Blob([testFile], { type: 'application/x-pkcs12' });
    formData.append('arquivo', blob, 'test.pfx');
    formData.append('senha', 'test123');

    const response = await fetch(`${JAVA_SERVICE_URL}/api/java-certificado/validar`, {
      method: 'POST',
      body: formData,
    });

    if (response.ok) {
      const data = await response.json();
      console.log('‚úÖ Valida√ß√£o Java:', 'Certificado processado');
      console.log('   Nome:', data.nome);
      console.log('   CNPJ:', data.cnpj);
    } else {
      console.log('‚ö†Ô∏è  Valida√ß√£o Java falhou (esperado para arquivo de teste)');
    }
  } catch (error) {
    console.log('‚ö†Ô∏è  Erro na valida√ß√£o (esperado para arquivo de teste):', error.message);
  }

  console.log('\nüéâ Teste de integra√ß√£o conclu√≠do!');
  console.log('\nüìã Pr√≥ximos passos:');
  console.log('1. Inicie o servi√ßo Java: cd /home/fabio/projetos/fenix-certificado-service && ./start-auto.sh');
  console.log('2. Teste o upload de um certificado real no frontend');
  console.log('3. Verifique os logs do NestJS para confirmar a integra√ß√£o');
}

testIntegration().catch(console.error);















